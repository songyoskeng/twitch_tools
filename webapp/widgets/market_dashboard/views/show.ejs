<% var storage = widget.storage %>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Market Dashboard</title>
    <link rel="preconnect" href="https://fonts.gstatic.com" />
    <link
      href="https://fonts.googleapis.com/css2?family=Prompt:wght@400;700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0"
      crossorigin="anonymous"
    ></script>
    <script src="https://d3js.org/d3.v6.min.js"></script>
    <style>
      html,
      body {
        height: 100%;
        width: 100%;
        margin: 0;
        margin: 0px;
        padding: 0px;
        font-family: "Prompt", sans-serif;
        overflow: hidden;
      }
      .box {
        text-align: center;
      }
      .wrapper {
        height: 100%;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
      }
      #alert-image {
        text-align: center;
        height: 100%;
        width: 100%;
        display: table-cell;
        background-position: center bottom;
        background-repeat: no-repeat;
        background-size: contain;
      }
      body {
        background-color: #151238;
      }

      body {
        color: #e0e1e6;
        padding: 36px 0px 36px;
      }

      .flex-column {
        display: flex;
        flex-direction: column;
      }
      .flex-1 {
        flex: 1;
      }
      .flex-2 {
        flex: 2;
      }
      .header {
        margin-bottom: 24px;
      }
      .status {
        content: " ";
        display: inline-block;
        width: 12px;
        height: 12px;
        margin-top: 4px;
        margin-right: 10px;
        margin-left: 10px;
        border: 1px solid #000;
        border-radius: 12px;
      }
      .status.online {
        background-color: #94e185;
        border-color: #78d965;
        box-shadow: 0px 0px 4px 1px #94e185;
      }

      .status.offline {
        background-color: #c9404d;
        border-color: #c42c3b;
        box-shadow: 0px 0px 4px 1px #c9404d;
      }

      .card-dark {
        background-color: #273050;
        color: #e0e1e6;
      }

      .card-code {
        background-color: #34495e;
        color: #e0e1e6;
      }

      #card-transaction {
        height: 32.5vh;
        overflow-y: hidden;
        padding-bottom: 14px;
      }

      #card-transaction > .card-body {
        overflow-y: hidden;
      }

      #card-transaction > .card-body > #transaction {
        overflow-y: hidden;
        list-style-type: none;
        padding-left: 0px;
      }
    </style>
    <script
      src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
      integrity="sha256-4+XzXVhsDmqanXGHaHvgh1gMQKX40OUvDEBTu8JcmNs="
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.socket.io/3.1.1/socket.io.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/2.0.2/anime.min.js"></script>
    <script>
      const socket = io();
      socket.on("widget::<%= widget.id %>", (data) => {
        show(data);
      });
      socket.on("widget::<%= widget.id %>:reload", () => {
        window.location.reload();
      });
    </script>
  </head>

  <body>
    <div class="container animate__animated animate__fadeIn">
      <div class="header">
        <h1 style="display: inline" class="align-middle">Market</h1>
        <div id="market_open"></div>
      </div>

      <div class="container-fluid">
        <div class="row">
          <div class="card card-dark col-md-6 col-sm-12">
            <div class="card-body">
              <h5 class="card-title">Gacha Transaction ðŸ’¸</h5>
              <div id="card-transaction" class="card card-code">
                <div class="card-body">
                  <ul id="transaction"></ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
        let { min_transaction, rate_icon, rate_color } = <%- JSON.stringify(storage) %>;

        let txns = []

        function show({key, data}) {
          if(key === "STATUS"){
            const {marketOpen} = data
            $("#market_open").removeClass()
            $("#market_open").addClass("animate__animated animate__fadeIn")
            if(marketOpen){
              $("#market_open").addClass("status online")
            } else {
              $("#market_open").addClass("status offline")
            }
          }
          else if (key === "TRANSACTION"){
            const {username, timestamp,  amount, gain, rate, txnTime} = data
            if(txns.length >= min_transaction){
              $(`#txn-${txns[0].timestamp}`).removeClass()
              $(`#txn-${txns[0].timestamp}`).addClass("animate__animated animate__fadeOutUp ")
              setTimeout(() => {
                $(`#txn-${txns[0].timestamp}`).remove()
                txns.shift()
              },300)
            }
            txns.push(data)
            let message = displayGachaTransaction(username, amount, gain, rate, txnTime)
            $("#transaction").append(`<li id="txn-${timestamp}" class="animate__animated animate__fadeInUp" >${message}</li>`)
          } else if (key === "LATEST_WINNERS"){
          }

        }

        function displayGachaTransaction(username, amount, gain, rate, txnTime){
          const _amount = roundDecimalPoint(amount)
          const _gain = roundDecimalPoint(gain)
          return `
          <div style="display:flex; justify-content:space-between; font-size:14px; ">
            <div style="padding:0px .5em .5em;flex:3; color:${rate_color[rate]};">${rate_icon[rate]} <b>${username}</b> à¸¥à¸‡à¸—à¸¸à¸™ ${numberWithCommas(_amount)} à¹„à¸”à¹‰à¸£à¸±à¸š ${numberWithCommas(_gain)}</div>
            <div style="flex:1;font-size:10px;text-align:right;color:#95afc0;">${txnTime}</div>
          </div>`
        }

        function roundDecimalPoint(num){
          return Math.round(num * 100) / 100
        }

        function numberWithCommas(x) {
          var parts = x.toString().split(".");
          parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
          return parts.join(".");
      }
    </script>
  </body>
</html>
